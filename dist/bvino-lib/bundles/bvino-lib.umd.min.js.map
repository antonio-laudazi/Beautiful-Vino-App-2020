{"version":3,"sources":["ng://bvino-lib/lib/services/common/session.service.ts","ng://bvino-lib/lib/services/auth/BVAuthorizationService.ts","node_modules/tslib/tslib.es6.js","ng://bvino-lib/lib/services/common/alert.service.ts","ng://bvino-lib/lib/services/common/bvhttp.service.ts","ng://bvino-lib/lib/models/comunicazioni/richieste/get/richiestagetgenerica.ts","ng://bvino-lib/lib/models/comunicazioni/richieste/put/richiestaputgenerica.ts","ng://bvino-lib/lib/models/comunicazioni/richieste/notifica/richiestanotificagenerica.ts","ng://bvino-lib/lib/models/comunicazioni/richieste/connect/richiestaconnectgenerica.ts","ng://bvino-lib/lib/services/common/richieste.service.ts","ng://bvino-lib/lib/services/common/constants.service.ts","ng://bvino-lib/lib/bvino-lib.module.ts","ng://bvino-lib/lib/services/common/common.service.ts","ng://bvino-lib/lib/models/token/accesstoken.ts","ng://bvino-lib/lib/models/token/accesstokenpayload.ts","ng://bvino-lib/lib/models/token/awstoken.ts","ng://bvino-lib/lib/models/token/idtoken.ts","ng://bvino-lib/lib/models/token/idtokenpayload.ts","ng://bvino-lib/lib/models/token/refreshtoken.ts","ng://bvino-lib/lib/models/entita/utente/aziendautente.ts","ng://bvino-lib/lib/models/entita/utente/badgeutente.ts","ng://bvino-lib/lib/models/entita/utente/eventoutente.ts","ng://bvino-lib/lib/models/entita/utente/utente.ts","ng://bvino-lib/lib/models/entita/utente/utenteutente.ts","ng://bvino-lib/lib/models/entita/utente/vinoutente.ts","ng://bvino-lib/lib/models/entita/azienda/azienda.ts","ng://bvino-lib/lib/models/entita/azienda/eventoazienda.ts","ng://bvino-lib/lib/models/entita/azienda/vinoazienda.ts","ng://bvino-lib/lib/models/entita/vino/aziendavino.ts","ng://bvino-lib/lib/models/entita/vino/eventovino.ts","ng://bvino-lib/lib/models/entita/vino/utentevino.ts","ng://bvino-lib/lib/models/entita/vino/vino.ts","ng://bvino-lib/lib/models/entita/evento/aziendaevento.ts","ng://bvino-lib/lib/models/entita/evento/badgeevento.ts","ng://bvino-lib/lib/models/entita/evento/evento.ts","ng://bvino-lib/lib/models/entita/evento/provinciaevento.ts","ng://bvino-lib/lib/models/entita/evento/utenteevento.ts","ng://bvino-lib/lib/models/entita/evento/vinoevento.ts","ng://bvino-lib/lib/models/entita/feed/aziendafeed.ts","ng://bvino-lib/lib/models/entita/feed/aziendavino.ts","ng://bvino-lib/lib/models/entita/feed/eventofeed.ts","ng://bvino-lib/lib/models/entita/feed/feed.ts","ng://bvino-lib/lib/models/entita/feed/vinofeed.ts","ng://bvino-lib/lib/models/entita/badge/badge.ts","ng://bvino-lib/lib/models/comunicazioni/richieste/get/rispostagetgenerica.ts","ng://bvino-lib/lib/models/comunicazioni/richieste/put/rispostaputgenerica.ts","ng://bvino-lib/lib/models/comunicazioni/richieste/notifica/rispostanotificagenerica.ts","ng://bvino-lib/lib/models/comunicazioni/richieste/connect/rispostaconnectgenerica.ts","ng://bvino-lib/lib/models/entita/provincia/provincia.ts","ng://bvino-lib/lib/models/entita/profiloAzienda/profiloAzienda.ts"],"names":["SessionService","prototype","set","key","value","this","sessionMap","get","clearSession","clear","deleteKey","delete","Injectable","Map","BVAuthorizationService","ngOnInit","Error","signup","username","password","name","_this","attributeList","dataEmail","Name","Value","dataPersonalName","dataPersonalNickname","emailAttribute","CognitoUserAttribute","nameAttribute","nicknameAttribute","push","Observable","create","observer","userPool","signUp","err","result","error","console","log","next","complete","signin","authenticationData","Username","Password","authenticationDetails","AuthenticationDetails","userData","Pool","cognitoUser","CognitoUser","setAuthenticationFlowType","authenticateUser","onSuccess","onFailure","newPasswordRequired","resp","challenge","signOut","forgotPassword","changePassword","oldpassword","getSession","session","JSON","stringify","CognitoIdentityServiceProvider","region","isLoggedIn","getCurrentUser","getAuthenticatedUser","Inject","args","sessionService","env","poolData","UserPoolId","ClientId","CognitoUserPool","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","e","rejected","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","AlertService","presentAlert","alertMessage","toastrService","success","presentErrorAlert","Router","ToastrService","router","BVHttpService","post","path","request","http","baseAppUrlGet","pathSeparator","postPut","baseAppUrlPut","postNotifica","baseAppUrlNotifica","postConnect","baseAppUrlConnect","HttpClient","HttpBackend","backEnd","RichiestaGetGenerica","RichiestaPutGenerica","RichiestaNotificaGenerica","RichiestaConnectGenerica","RichiesteService","getRichiestaGetUtenti","richiesta","functionName","getUtentiFunctionName","getRichiestaGetUtentiAzienda","idAzienda","getUtentiAziendaFunctionName","getRichiestaGetUtente","idUtente","getUtenteFunctionName","getRichiestaGetUtenteEmail","emailUtente","getUtenteEmailFunctionName","getRichiestaGetAziende","getAziendeFunctionName","getRichiestaGetAzienda","getAziendaFunctionName","getRichiestaGetBadges","getBadgesFunctionName","getRichiestaGetEventi","getEventiFunctionName","elencoCompleto","getRichiestaGetEventiAzienda","getEventiAziendaFunctionName","getRichiestaGetEventoUtente","idEvento","dataEvento","getEventoFunctionName","getRichiestaGetEvento","getRichiestaGetProvincie","getProvincieFunctionName","getRichiestaGetFeed","getFeedFunctionName","getRichiestaGetFeedAzienda","getFeedAziendaFunctionName","getRichiestaGetVini","getViniFunctionName","getRichiestaGetVino","idVino","getVinoFunctionName","getRichiestaGetViniAzienda","getViniAziendaFunctionName","getRichiestaGetProfiloAzienda","idProfiloAzienda","getProfiloAziendaFunctionName","getRichiestaPutImmagine","file","filename","tipoEntita","base64Image","putImmaginiFunctionName","getRichiestaPutProvincia","provincia","putProvinciaFunctionName","getRichiestaPutUtente","utente","putUtenteFunctionName","getRichiestaPutEvento","evento","putEventoFunctionName","getRichiestaPutFeed","feed","putFeedFunctionName","getRichiestaPutVino","vino","putVinoFunctionName","getRichiestaPutAzienda","azienda","putAziendaFunctionName","getRichiestaPutuserProfileWithImage","putUserProfileImageWithUserFunctionName","getRichiestaPutBadge","badge","getRichiestaNotifica","messaggio","getRichiestaAggiungiEventoAPreferiti","statoPreferitoEvento","statoAcquistatoEvento","statoEvento","connectEventoAUtenteFunctionName","getRichiestaAcquistaEvento","dataPrenotazioneEvento","numeroPartecipanti","getRichiestaRimuoviEventoDaPreferiti","ConstantsService","RUOLO_SUPER_ADMIN","RUOLO_AZIENDA_ADMIN","RUOLO_UTENTE_GENERICO","RUOLO_UTENTE_AZIENDA","KEY_AZIENDA_ID_DEFAULT","KEY_AZIENDA_NOME_DEFAULT","KEY_AZIENDA_LOGO_DEFAULT","KEY_AZIENDA_SPLASHSCREEN_DEFAULT","KEY_AZIENDA_PAYPALCODE_DEFAULT","BvinoLibModule","forRoot","environment","ngModule","providers","provide","useValue","NgModule","declarations","imports","HttpClientModule","BrowserAnimationsModule","ToastrModule","exports","BVCommonService","putNotifica","httpService","notificationServiceName","put","putServiceName","getServiceName","connect","connectServiceName","AccessToken","AccessTokenPayload","AwsToken","IdToken","IdTokenPayload","RefreshToken","AziendaUtente","BadgeUtente","EventoUtente","Utente","UtenteUtente","VinoUtente","Azienda","EventoAzienda","VinoAzienda","AziendaVino","EventoVino","UtenteVino","Vino","AziendaEvento","BadgeEvento","Evento","ProvinciaEvento","UtenteEvento","VinoEvento","AziendaFeed","AziendaVinoFeed","EventoFeed","Feed","VinoFeed","Badge","RispostaGetGenerica","RispostaPutGenerica","RispostaNotificaGenerica","RispostaConnectGenerica","Provincia","ProfiloAzienda"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n/**\n * servizio di sessione contenente una mappa che consente di scambiare informazioni nella sessione\n * questo servizio si occupa anche di gestire la persistenza delle informazioni a livello di cookies\n *\n */\n@Injectable()\nexport class SessionService {\n\n  /*\n    la mappa è fatta per contenere solo stringhe. In caso di oggetti e JSON usare\n    JSON.parse (da stringa a oggetto)\n    JSON.stringfy (da oggetto a stringa)\n  */\n  private sessionMap: Map<string, string>;\n\n  constructor() {\n    this.sessionMap = new Map<string, string>();\n  }\n\n  public set(key: string, value: string): void {\n    this.sessionMap.set(key, value);\n  }\n\n  public get(key: string): string {\n    return this.sessionMap.get(key);\n  }\n\n  public clearSession(): void {\n    this.sessionMap.clear();\n  }\n\n  public deleteKey(key: string): void {\n    this.sessionMap.delete(key);\n  }\n\n}\n","import { OnInit, Injectable, Inject } from '@angular/core';\nimport { AuthenticationDetails,\n  CognitoUser,\n  CognitoUserPool,\n  CognitoUserSession,\n  CognitoUserAttribute} from 'amazon-cognito-identity-js';\nimport { Observable } from 'rxjs';\nimport { SessionService } from '../common/session.service';\nimport { CodeDeliveryDetailsType } from 'aws-sdk/clients/cognitoidentityserviceprovider';\nimport * as CognitoIdentityServiceProvider from 'aws-sdk/clients/cognitoidentityserviceprovider';\n\n\n\n@Injectable()\nexport class BVAuthorizationService implements OnInit {\n\n  cognitoUser: any;\n\n  private poolData = {\n    UserPoolId: this.env.UserPoolId,\n    ClientId: this.env.ClientId\n  };\n\n  private userPool = new CognitoUserPool(this.poolData);\n\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n\n  constructor(sessionService: SessionService,\n    @Inject('env') private env: any) {\n\n  }\n\n  public signup(username: string, password: string, name: string): Observable<CodeDeliveryDetailsType> {\n\n    const attributeList = [];\n\n    const dataEmail = {\n      Name: 'email',\n      Value: username\n    };\n\n    const dataPersonalName = {\n      Name: 'name',\n      Value: name\n    };\n\n    const dataPersonalNickname = {\n      Name: 'nickname',\n      Value: name\n    };\n\n    const emailAttribute = new CognitoUserAttribute(dataEmail);\n    const nameAttribute = new CognitoUserAttribute(dataPersonalName);\n    const nicknameAttribute = new CognitoUserAttribute(dataPersonalNickname);\n\n    attributeList.push(emailAttribute);\n    attributeList.push(nameAttribute);\n    attributeList.push(nicknameAttribute);\n\n    return Observable.create(observer => {\n      return this.userPool.signUp(username, password, attributeList, null, function (err, result) {\n        if (err) {\n          observer.error(err);\n          console.log(err);\n        } else {\n          observer.next(result);\n          observer.complete();\n        }\n      });\n    });\n  }\n\n  public signin(username: string, password: string): Observable<any> {\n    const authenticationData = {\n      Username: username,\n      Password: password\n    };\n    const authenticationDetails = new AuthenticationDetails(authenticationData);\n\n    const userData = {\n      Username: username,\n      Pool: this.userPool\n    };\n    const cognitoUser = new CognitoUser(userData);\n\n    cognitoUser.setAuthenticationFlowType('USER_PASSWORD_AUTH');\n\n    return Observable.create(observer => {\n      cognitoUser.authenticateUser(authenticationDetails, {\n        onSuccess: function (result) {\n          observer.next(result);\n          observer.complete();\n        },\n        onFailure: function (err) {\n          console.log(err);\n          observer.error(err);\n        },\n        newPasswordRequired: function(resp) {\n          resp.challenge = 'NEW_PASSWORD_REQUIRED';\n          observer.next(resp);\n          observer.complete();\n        }\n      });\n    });\n  }\n\n  public signOut(username: string): void {\n    const userData = {\n      Username: username,\n      Pool: this.userPool\n    };\n    const cognitoUser = new CognitoUser(userData);\n    cognitoUser.signOut();\n  }\n\n  public forgotPassword(username: string): Observable<CodeDeliveryDetailsType> {\n\n    const userData = {\n      Username: username,\n      Pool: this.userPool\n    };\n    const cognitoUser = new CognitoUser(userData);\n\n    return Observable.create(observer => {\n      cognitoUser.forgotPassword({\n        onSuccess: function (result) {\n          observer.next(result);\n          observer.complete();\n        },\n        onFailure: function (err) {\n          console.log(err);\n          observer.error(err);\n        }\n      });\n    });\n  }\n\n  public changePassword(username: string, oldpassword: string, password: string): Observable<CodeDeliveryDetailsType> {\n\n    const userData = {\n      Username: username,\n      Pool: this.userPool\n    };\n    // const currentUser = this.userPool.getCurrentUser();\n    const cognitoUser = new CognitoUser(userData);\n\n    cognitoUser.getSession(result => {\n      const session = result;\n      console.log('session: ' + JSON.stringify(session));\n    });\n\n    const serviceProvider = new CognitoIdentityServiceProvider({ region: 'eu-central-1' });\n\n    return Observable.create(observer => {\n      cognitoUser.changePassword(oldpassword, password, (error, result) => {\n        if (result) {\n          console.log('result change password: ' + JSON.stringify(result));\n          observer.next(result);\n          observer.complete();\n        }\n        if (error) {\n          console.log('error change password: ' + JSON.stringify(error));\n          observer.error(error);\n        }\n      });\n    });\n  }\n\n  public isLoggedIn() {\n    return this.userPool.getCurrentUser() !== null;\n  }\n\n  public getAuthenticatedUser() {\n    return this.userPool.getCurrentUser();\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// import { AlertController } from '@ionic/angular';\nimport { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AlertService {\n\n  constructor(\n    public router: Router,\n    public toastrService: ToastrService) {\n  }\n\n  public async presentAlert(alertMessage: string) {\n    this.toastrService.success(alertMessage);\n  }\n\n  public async presentErrorAlert(alertMessage: string) {\n    this.toastrService.error(alertMessage);\n  }\n}\n\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpBackend } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { RispostaGetGenerica } from '../../models/comunicazioni/richieste/get/rispostagetgenerica';\nimport { RichiestaGetGenerica } from '../../models/comunicazioni/richieste/get/richiestagetgenerica';\nimport { RispostaPutGenerica } from '../../models/comunicazioni/richieste/put/rispostaputgenerica';\nimport { RichiestaPutGenerica } from '../../models/comunicazioni/richieste/put/richiestaputgenerica';\nimport { RichiestaNotificaGenerica } from '../../models/comunicazioni/richieste/notifica/richiestanotificagenerica';\nimport { RispostaNotificaGenerica } from '../../models/comunicazioni/richieste/notifica/rispostanotificagenerica';\nimport { RichiestaConnectGenerica } from '../../models/comunicazioni/richieste/connect/richiestaconnectgenerica';\nimport { RispostaConnectGenerica } from '../../models/comunicazioni/richieste/connect/rispostaconnectgenerica';\n\n\n@Injectable()\nexport class BVHttpService {\n\n  constructor(\n    private http: HttpClient,\n    private backEnd: HttpBackend,\n    @Inject('env') private env: any) {\n  }\n\n  public post(path: string, request: RichiestaGetGenerica): Observable<RispostaGetGenerica> {\n    return this.http.post<RispostaGetGenerica>(\n      this.env.baseAppUrlGet\n      + this.env.pathSeparator\n      + path, request);\n  }\n\n  public postPut(path: string, request: RichiestaPutGenerica): Observable<RispostaPutGenerica> {\n    return this.http.post<RispostaPutGenerica>(\n      this.env.baseAppUrlPut\n      + this.env.pathSeparator\n      + path, request);\n  }\n\n  public postNotifica(path: string, request: RichiestaNotificaGenerica): Observable<RispostaNotificaGenerica> {\n    return this.http.post<RispostaNotificaGenerica>(\n      this.env.baseAppUrlNotifica\n      + this.env.pathSeparator\n      + path, request);\n  }\n\n  public postConnect(path: string, request: RichiestaConnectGenerica): Observable<RispostaConnectGenerica> {\n    return this.http.post<RispostaConnectGenerica>(\n      this.env.baseAppUrlConnect\n      + this.env.pathSeparator\n      + path, request);\n  }\n\n}\n","export class RichiestaGetGenerica {\n  public idUtenteLog: string;\n  public idUtentePadre: string;\n  public idAzienda: string;\n  public idUtente: string;\n  public idBadge: string;\n  public idProvincia: string;\n  public numEventiVisualizzati: number;\n  public idUltimoEvento: string;\n  public dataUltimoEvento: number;\n  public idEvento: string;\n  public dataEvento: number;\n  public idUltimoFeed: string;\n  public dataUltimoFeed: number;\n  public oldToken: string;\n  public idVino: string;\n  public emailUtente: string;\n  public passwordUtente: string;\n  public latitudineUtente: string;\n  public longitudineUtente: string;\n  public elencoCompleto: string;\n  public idProfiloAzienda: string;\n  public functionName: string;\n}\n","import { Provincia } from '../../../entita/provincia/provincia';\nimport { Azienda } from '../../../entita/azienda/azienda';\nimport { Badge } from '../../../entita/badge/badge';\nimport { Evento } from '../../../entita/evento/evento';\nimport { Feed } from '../../../entita/feed/feed';\nimport { Utente } from '../../../entita/utente/utente';\nimport { Vino } from '../../../entita/vino/vino';\n\nexport class RichiestaPutGenerica {\n  public provincia: Provincia;\n  public azienda: Azienda;\n  public badge: Badge;\n  public evento: Evento;\n  public feed: Feed;\n  public utente: Utente;\n  public vino: Vino;\n  public base64Image: string;\n  public tipoEntita: string;\n  public filename: string;\n  public idUtente: string;\n  public functionName: string;\n}\n","export class RichiestaNotificaGenerica {\n  public messaggio: string;\n}\n","import { Azienda } from '../../../entita/azienda/azienda';\nimport { Badge } from '../../../entita/badge/badge';\nimport { Vino } from '../../../entita/vino/vino';\nimport { Utente } from '../../../entita/utente/utente';\n\nexport class RichiestaConnectGenerica {\n\n  public functionName: string;\n\n  public badges: Array<Badge>;\n  public idUtente: string;\n  public idEvento: string;\n  public idVino: string;\n  public dataEvento: number;\n  public dataPrenotazioneEvento: number;\n  public statoEvento: string;\n  public statoVino: string;\n  public statoUtente: string;\n  public viniAzienda: Array<Vino>;\n  public utenti: Array<Utente>;\n  public idAzienda: string;\n  public aziendeViniDaAssociare: Array<Azienda>;\n  public numeroPartecipanti: number;\n  public statoPreferitoEvento: number;\n  public statoAcquistatoEvento: number;\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RichiestaGetGenerica } from '../../models/comunicazioni/richieste/get/richiestagetgenerica';\nimport { RichiestaPutGenerica } from '../../models/comunicazioni/richieste/put/richiestaputgenerica';\nimport { Utente } from '../../models/entita/utente/utente';\nimport { Evento } from '../../models/entita/evento/evento';\nimport { Feed } from '../../models/entita/feed/feed';\nimport { Vino } from '../../models/entita/vino/vino';\nimport { Provincia } from '../../models/entita/provincia/provincia';\nimport { RichiestaNotificaGenerica } from '../../models/comunicazioni/richieste/notifica/richiestanotificagenerica';\nimport { RichiestaConnectGenerica } from '../../models/comunicazioni/richieste/connect/richiestaconnectgenerica';\nimport { Azienda } from '../../models/entita/azienda/azienda';\nimport { Badge } from '../../models/entita/badge/badge';\n\n@Injectable()\nexport class RichiesteService {\n  constructor(@Inject('env') private env: any) {\n\n  }\n\n  // -------- GET --------\n\n  public getRichiestaGetUtenti() {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getUtentiFunctionName;\n\n    return richiesta;\n  }\n\n  public getRichiestaGetUtentiAzienda(idAzienda: string) {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getUtentiAziendaFunctionName;\n    richiesta.idAzienda = idAzienda;\n\n    return richiesta;\n  }\n\n  public getRichiestaGetUtente(idUtente: string) {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getUtenteFunctionName;\n    richiesta.idUtente = idUtente;\n\n    return richiesta;\n  }\n\n  public getRichiestaGetUtenteEmail(emailUtente: string) {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getUtenteEmailFunctionName;\n    richiesta.emailUtente = emailUtente;\n\n    return richiesta;\n  }\n\n  public getRichiestaGetAziende() {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getAziendeFunctionName;\n\n    return richiesta;\n  }\n\n  public getRichiestaGetAzienda(idAzienda: string) {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getAziendaFunctionName;\n    richiesta.idAzienda = idAzienda;\n    return richiesta;\n  }\n\n  public getRichiestaGetBadges() {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getBadgesFunctionName;\n\n    return richiesta;\n  }\n\n  public getRichiestaGetEventi() {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getEventiFunctionName;\n\n    richiesta.idUtente = '';\n    richiesta.elencoCompleto = 'S';\n\n    return richiesta;\n  }\n\n  public getRichiestaGetEventiAzienda(idAzienda: string) {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getEventiAziendaFunctionName;\n    richiesta.idAzienda = idAzienda;\n\n    richiesta.idUtente = '';\n    richiesta.elencoCompleto = 'S';\n\n    return richiesta;\n  }\n\n  public getRichiestaGetEventoUtente(idEvento: string, dataEvento: number, idUtente: string) {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getEventoFunctionName;\n\n    richiesta.idEvento = idEvento;\n    richiesta.idUtente = idUtente;\n    richiesta.dataEvento = dataEvento;\n\n    return richiesta;\n  }\n\n  public getRichiestaGetEvento(idEvento: string) {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getEventoFunctionName;\n\n    richiesta.idEvento = idEvento;\n\n    return richiesta;\n  }\n\n\n  public getRichiestaGetProvincie() {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getProvincieFunctionName;\n\n    return richiesta;\n  }\n\n  public getRichiestaGetFeed() {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getFeedFunctionName;\n\n    return richiesta;\n  }\n\n  public getRichiestaGetFeedAzienda(idAzienda: string) {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getFeedAziendaFunctionName;\n    richiesta.idAzienda = idAzienda;\n\n    return richiesta;\n  }\n\n  public getRichiestaGetVini() {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getViniFunctionName;\n\n    return richiesta;\n  }\n\n  public getRichiestaGetVino(idVino: string) {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.functionName = this.env.getVinoFunctionName;\n\n    richiesta.idVino = idVino;\n\n    return richiesta;\n  }\n\n  public getRichiestaGetViniAzienda(idAzienda: string) {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.idAzienda = idAzienda;\n    richiesta.functionName = this.env.getViniAziendaFunctionName;\n\n    return richiesta;\n  }\n\n  public getRichiestaGetProfiloAzienda(idProfiloAzienda: string) {\n    const richiesta = new RichiestaGetGenerica();\n    richiesta.idProfiloAzienda = idProfiloAzienda;\n    richiesta.functionName = this.env.getProfiloAziendaFunctionName;\n\n    return richiesta;\n  }\n\n  // -------- PUT --------\n\n  public getRichiestaPutImmagine(file: any, filename: string, tipoEntita: string) {\n    const richiesta = new RichiestaPutGenerica();\n\n    richiesta.base64Image = file;\n    richiesta.filename = filename;\n    richiesta.tipoEntita = tipoEntita;\n\n    richiesta.functionName = this.env.putImmaginiFunctionName;\n\n    return richiesta;\n  }\n\n  public getRichiestaPutProvincia(provincia: Provincia) {\n    const richiesta = new RichiestaPutGenerica();\n    richiesta.functionName = this.env.putProvinciaFunctionName;\n    richiesta.provincia = provincia;\n    return richiesta;\n  }\n\n  public getRichiestaPutUtente(utente: Utente) {\n    const richiesta = new RichiestaPutGenerica();\n    richiesta.functionName = this.env.putUtenteFunctionName;\n    richiesta.utente = utente;\n    return richiesta;\n  }\n\n  public getRichiestaPutEvento(evento: Evento) {\n    const richiesta = new RichiestaPutGenerica();\n    richiesta.functionName = this.env.putEventoFunctionName;\n    richiesta.evento = evento;\n    return richiesta;\n  }\n\n  public getRichiestaPutFeed(feed: Feed) {\n    const richiesta = new RichiestaPutGenerica();\n    richiesta.functionName = this.env.putFeedFunctionName;\n    richiesta.feed = feed;\n    return richiesta;\n  }\n\n\n  public getRichiestaPutVino(vino: Vino) {\n    const richiesta = new RichiestaPutGenerica();\n    richiesta.functionName = this.env.putVinoFunctionName;\n    richiesta.vino = vino;\n    return richiesta;\n  }\n\n  public getRichiestaPutAzienda(azienda: Azienda) {\n    const richiesta = new RichiestaPutGenerica();\n    richiesta.functionName = this.env.putAziendaFunctionName;\n    richiesta.azienda = azienda;\n    return richiesta;\n  }\n\n  public getRichiestaPutuserProfileWithImage(utente: Utente) {\n    const richiesta = new RichiestaPutGenerica();\n    richiesta.functionName = this.env.putUserProfileImageWithUserFunctionName;\n    richiesta.utente = utente;\n    return richiesta;\n  }\n\n  public getRichiestaPutBadge(badge: Badge) {\n    const richiesta = new RichiestaPutGenerica();\n    richiesta.functionName = this.env.putVinoFunctionName;\n    richiesta.badge = badge;\n    return richiesta;\n  }\n\n  // -------- NOTIFICATION --------\n  public getRichiestaNotifica(messaggio: string) {\n    const richiesta = new RichiestaNotificaGenerica();\n    richiesta.messaggio = messaggio;\n    return richiesta;\n  }\n\n  // -------- CONNECT --------\n  public getRichiestaAggiungiEventoAPreferiti(\n    idUtente: string, idEvento: string, dataEvento: number, statoPreferitoEvento: number, statoAcquistatoEvento: number) {\n    const richiesta = new RichiestaConnectGenerica();\n\n    richiesta.idUtente = idUtente;\n    richiesta.idEvento = idEvento;\n    richiesta.dataEvento = dataEvento;\n    richiesta.statoEvento = 'P';\n    richiesta.statoPreferitoEvento = statoPreferitoEvento;\n    richiesta.statoAcquistatoEvento = statoAcquistatoEvento;\n    richiesta.functionName = this.env.connectEventoAUtenteFunctionName;\n\n    return richiesta;\n  }\n\n  public getRichiestaAcquistaEvento(\n    idUtente: string,\n    idEvento: string,\n    dataEvento: number,\n    dataPrenotazioneEvento: number,\n    statoPreferitoEvento: number,\n    statoAcquistatoEvento: number,\n    numeroPartecipanti: number) {\n    const richiesta = new RichiestaConnectGenerica();\n\n    richiesta.idUtente = idUtente;\n    richiesta.idEvento = idEvento;\n    richiesta.dataEvento = dataEvento;\n    richiesta.dataPrenotazioneEvento = dataPrenotazioneEvento;\n    richiesta.statoEvento = 'A';\n    richiesta.statoPreferitoEvento = statoPreferitoEvento;\n    richiesta.statoAcquistatoEvento = statoAcquistatoEvento;\n    richiesta.functionName = this.env.connectEventoAUtenteFunctionName;\n    richiesta.numeroPartecipanti = numeroPartecipanti;\n\n    return richiesta;\n  }\n\n  public getRichiestaRimuoviEventoDaPreferiti(\n    idUtente: string, idEvento: string, dataEvento: number, statoPreferitoEvento: number, statoAcquistatoEvento: number) {\n    const richiesta = new RichiestaConnectGenerica();\n\n    richiesta.idUtente = idUtente;\n    richiesta.idEvento = idEvento;\n    richiesta.dataEvento = dataEvento;\n    richiesta.statoEvento = 'D';\n    richiesta.statoPreferitoEvento = statoPreferitoEvento;\n    richiesta.statoAcquistatoEvento = statoAcquistatoEvento;\n    richiesta.functionName = this.env.connectEventoAUtenteFunctionName;\n\n    return richiesta;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ConstantsService {\n\n  public RUOLO_SUPER_ADMIN = 'SA';\n  public RUOLO_AZIENDA_ADMIN = 'AA';\n  public RUOLO_UTENTE_GENERICO = 'UG';\n  public RUOLO_UTENTE_AZIENDA = 'UA';\n\n  public KEY_AZIENDA_ID_DEFAULT = '000';\n  public KEY_AZIENDA_NOME_DEFAULT = 'Beautiful Vino';\n  public KEY_AZIENDA_LOGO_DEFAULT = '';\n  public KEY_AZIENDA_SPLASHSCREEN_DEFAULT = '';\n  public KEY_AZIENDA_PAYPALCODE_DEFAULT = '';\n\n}\n","import { NgModule } from '@angular/core';\nimport { BVAuthorizationService } from './services/auth/BVAuthorizationService';\nimport { SessionService } from './services/common/session.service';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AlertService } from './services/common/alert.service';\nimport { BVHttpService } from './services/common/bvhttp.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RichiesteService } from './services/common/richieste.service';\nimport { ConstantsService } from './services/common/constants.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    HttpClientModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot() // ToastrModule added\n  ],\n  providers: [\n    BVAuthorizationService,\n    SessionService,\n    AlertService,\n    BVHttpService,\n    RichiesteService,\n    ConstantsService\n  ],\n  exports: []\n})\nexport class BvinoLibModule {\n  static forRoot(environment: any) {\n    return {\n      ngModule: BvinoLibModule,\n      providers: [\n        {\n          provide: 'env', // you can also use InjectionToken\n          useValue: environment\n        }\n      ],\n    };\n  }\n}\n","import { RichiestaPutGenerica } from '../../models/comunicazioni/richieste/put/richiestaputgenerica';\nimport { Observable } from 'rxjs';\nimport { RispostaPutGenerica } from '../../models/comunicazioni/richieste/put/rispostaputgenerica';\nimport { BVHttpService } from './bvhttp.service';\nimport { RichiestaGetGenerica } from '../../models/comunicazioni/richieste/get/richiestagetgenerica';\nimport { RispostaGetGenerica } from '../../models/comunicazioni/richieste/get/rispostagetgenerica';\nimport { Injectable, Inject } from '@angular/core';\nimport { RichiestaNotificaGenerica } from '../../models/comunicazioni/richieste/notifica/richiestanotificagenerica';\nimport { RispostaNotificaGenerica } from '../../models/comunicazioni/richieste/notifica/rispostanotificagenerica';\nimport { RichiestaConnectGenerica } from '../../models/comunicazioni/richieste/connect/richiestaconnectgenerica';\nimport { RispostaConnectGenerica } from '../../models/comunicazioni/richieste/connect/rispostaconnectgenerica';\n\n@Injectable()\nexport class BVCommonService {\n\n  constructor(\n    private httpService: BVHttpService,\n    @Inject('env') private env: any\n  ) { }\n\n  public putNotifica(request: RichiestaNotificaGenerica): Observable<RispostaNotificaGenerica> {\n    return this.httpService.postNotifica(this.env.notificationServiceName, request);\n  }\n\n  public put(request: RichiestaPutGenerica): Observable<RispostaPutGenerica> {\n    return this.httpService.postPut(this.env.putServiceName, request);\n  }\n\n  public get(request: RichiestaGetGenerica): Observable<RispostaGetGenerica> {\n    return this.httpService.post(this.env.getServiceName, request);\n  }\n\n  public connect(request: RichiestaConnectGenerica): Observable<RispostaConnectGenerica> {\n    return this.httpService.postConnect(this.env.connectServiceName, request);\n  }\n}\n","import { AccessTokenPayload } from './accesstokenpayload';\n\nexport class AccessToken {\n    public jwtToken: string;\n    public payload: AccessTokenPayload;\n}","export class AccessTokenPayload {\n    public sub: string;\n    public event_id: string;\n    public token_use: string;\n    public scope: string;\n    public auth_time: number;\n    public iss: string;\n    public exp: number;\n    public iat: number;\n    public jti: string;\n    public client_id: string;\n    public username: string;\n}\n","import { IdToken } from './idtoken';\nimport { AccessToken } from './accesstoken';\nimport { RefreshToken } from './refreshtoken';\n\nexport class AwsToken {\n    public idToken: IdToken;\n    public accessToken: AccessToken;\n    public refreshToken: RefreshToken;\n    public clockDrift: number;\n}","import { IdTokenPayload } from './idtokenpayload';\n\nexport class IdToken {\n    public jwtToken: string;\n    public payload: IdTokenPayload;\n}","export class IdTokenPayload {\n    public sub: string;\n    public aud: string;\n    public email_verified: boolean;\n    public event_id: string;\n    public token_use: string;\n    public auth_time: number;\n    public iss: string;\n    public nickname: string;\n    public exp: number;\n    public iat: number;\n    public email: string;\n}\n// \"cognito:username\":\"88e3052d-d90a-4090-a4ec-ae5fd727d7d6\"","export class RefreshToken {\n    public jwtToken: string;\n}","export class AziendaUtente {\n  public idAzienda: string;\n  public nomeAzienda: string;\n}\n","export class BadgeUtente {\n  public idBadge: string;\n  public tuoBadge: string;\n}\n","export class EventoUtente {\n  public idEvento: string;\n  public dataEvento: number;\n  public statoEvento: string;\n  public numeroPartecipanti: number;\n}\n","import { Evento } from '../evento/evento';\nimport { Azienda } from '../azienda/azienda';\nimport { Badge } from '../badge/badge';\nimport { EventoUtente } from './eventoutente';\nimport { AziendaUtente } from './aziendautente';\nimport { VinoUtente } from './vinoutente';\nimport { BadgeUtente } from './badgeutente';\nimport { UtenteUtente } from './utenteutente';\n\nexport class Utente {\n  public idUtente: string;\n  public nomeUtente: string;\n  public cognomeUtente: string;\n  public creditiUtente: number;\n  public esperienzaUtente: number;\n  public livelloUtente: string;\n  public biografiaUtente: string;\n  public cittaUtente: string;\n  public usernameUtente: string;\n  public urlFotoUtente: string;\n  public emailUtente: string;\n  public professioneUtente: string;\n  public numTotEventi: number;\n  public numTotAziende: number;\n  public numTotBadge: number;\n  public condivisioneBadge: string;\n  public condivisioneEventi: string;\n  public condivisioneVini: string;\n  public statoUtente: string;\n  public ruoloUtente: string;\n  public idProfiloAziendaUtente: string;\n  public eventiUtente: Array<Evento>;\n  public aziendeUtente: Array<Azienda>;\n  public badgeUtente: Array<Badge>;\n  public utentiUtente: Array<Utente>;\n  public eventiUtenteInt: Array<EventoUtente>;\n  public acquistatiEventiUtenteInt: Array<EventoUtente>;\n  public aziendeUtenteInt: Array<AziendaUtente>;\n  public viniUtenteInt: Array<VinoUtente>;\n  public badgeUtenteInt: Array<BadgeUtente>;\n  public utentiUtenteInt: Array<UtenteUtente>;\n}\n","export class UtenteUtente {\n  public idUtente: string;\n}\n","export class VinoUtente {\n  public idVino: string;\n  public nomeVino: string;\n  public statoVino: string;\n  public inBreveVino: string;\n  public urlLogoVino: string;\n  public uvaggioVino: string;\n}\n","import { EventoAzienda } from './eventoazienda';\nimport { VinoAzienda } from './vinoazienda';\nimport { Evento } from '../evento/evento';\nimport { Vino } from '../vino/vino';\n\nexport class Azienda {\n  public idAzienda: string;\n  public zonaAzienda: string;\n  public nomeAzienda: string;\n  public infoAzienda: string;\n  public descrizioneAzienda: string;\n  public cittaAzienda: string;\n  public regioneAzienda: string;\n  public indirizzoAzienda: string;\n  public latitudineAzienda: number;\n  public longitudineAzienda: number;\n  public urlLogoAzienda: string;\n  public urlImmagineAzienda: string;\n  public sitoAzienda: string;\n  public emailAzienda: string;\n  public emailSecondariaAzienda: string;\n  public telefonoAzienda: string;\n  public eventiAzienda: Array<Evento>;\n  public viniAzienda: Array<Vino>;\n  public eventiAziendaInt: Array<EventoAzienda>;\n  public viniAziendaInt: Array<VinoAzienda>;\n  public numEventiAzienda: number;\n  public numViniAzienda: number;\n  public active: boolean;\n}\n","export class EventoAzienda {\n  public idEvento: string;\n  public dataEvento: number;\n}\n","export class VinoAzienda {\n  public idVino: string;\n  public nomeVino: string;\n  public statoVino: string;\n  public annoVino: number;\n\n  public uvaggioVino: string;\n  public inBreveVino: string;\n  public urlLogoVino: string;\n}\n","export class AziendaVino {\n  public idAzienda: string;\n  public nomeAzienda: string;\n}\n","export class EventoVino {\n  public idEvento: string;\n  public dataEvento: number;\n}\n","export class UtenteVino {\n  public idUtente: string;\n}\n","import { Azienda } from '../azienda/azienda';\nimport { Evento } from '../evento/evento';\nimport { Utente } from '../utente/utente';\nimport { AziendaVino } from './aziendavino';\nimport { EventoVino } from './eventovino';\nimport { UtenteVino } from './utentevino';\n\nexport class Vino {\n  public idVino: string;\n  public nomeVino: string;\n  public annoVino: number;\n  public inBreveVino: string;\n  public descrizioneVino: string;\n  public infoVino: string;\n  public uvaggioVino: string;\n  public regioneVino: string;\n  public profumoVino: string;\n  public urlLogoVino: string;\n  public urlImmagineVino: string;\n  public statoVino: string;\n  public prezzoVino: number;\n  public acquistabileVino: number;\n  public aziendaVino: Azienda;\n  public eventiVino: Array<Evento>;\n  public utentiVino: Array<Utente>;\n  public aziendaVinoInt: AziendaVino;\n  public eventiVinoInt: Array<EventoVino>;\n  public utentiVinoInt: Array<UtenteVino>;\n}\n","export class AziendaEvento {\n  public idAzienda: string;\n  public infoAzienda: string;\n}\n","export class BadgeEvento {\n  public idBadge: string;\n}\n","import { Azienda } from '../azienda/azienda';\nimport { BadgeEvento } from './badgeevento';\nimport { ProvinciaEvento } from './provinciaevento';\nimport { AziendaEvento } from './aziendaevento';\nimport { UtenteEvento } from './utenteevento';\nimport { VinoEvento } from './vinoevento';\nimport { Vino } from '../vino/vino';\nimport { Badge } from '../badge/badge';\nimport { Provincia } from '../provincia/provincia';\nimport { Utente } from '../utente/utente';\n\nexport class Evento {\n  public idEvento: string;\n  public dataEvento: number;\n  public dataPrenotazioneEvento: number;\n  public dataEventoa: string;\n  public cittaEvento: string;\n  public titoloEvento: string;\n  public temaEvento: string;\n  public prezzoEvento: number;\n  public urlFotoEvento: string;\n  public statoEvento: string;\n  public statoPreferitoEvento: string;\n  public testoEvento: string;\n  public latitudineEvento: number;\n  public longitudineEvento: number;\n  public indirizzoEvento: string;\n  public telefonoEvento: string;\n  public facebookEvento: string;\n  public emailEvento: string;\n  public numMaxPartecipantiEvento: number;\n  public numPostiDisponibiliEvento: number;\n  public acquistabileEvento: number;\n  public creditiEvento: number;\n  public puntiEsperienza: number;\n  public pubblicatoEvento: boolean;\n  public badgeEvento: Badge;\n  public provinciaEvento: Provincia;\n  public aziendaOspitanteEvento: Azienda;\n  public iscrittiEvento: Array<Utente>;\n  public dettagliIscrittiEvento: Array<UtenteEvento>;\n  public viniEvento: Array<Vino>;\n  public badgeEventoInt: BadgeEvento;\n  public provinciaEventoInt: ProvinciaEvento;\n  public aziendaOspitanteEventoInt: AziendaEvento;\n  public aziendaFornitriceEventoInt: AziendaEvento;\n  public iscrittiEventoInt: Array<UtenteEvento>;\n  public viniEventoInt: Array<VinoEvento>;\n  public aziendeViniEvento: Array<Azienda>;\n  public eventoRicorrente: boolean;\n  public dateRicorrenti: Array<number>;\n  public oldDate: number;\n  public oldIdAzienda: string;\n}\n","export class ProvinciaEvento {\n  public idProvincia: string;\n  public nomeProvincia: string;\n  public siglaProvincia: string;\n}\n","export class UtenteEvento {\n  public idUtente: string;\n  public dataEvento: number;\n  public postiAcquistati: number;\n}\n","export class VinoEvento {\n  public idVino: string;\n  public nomeVino: string;\n  public nomeAziendaVino: string;\n  public idAziendaVino: string;\n  public annoVino: number;\n  public statoVino: string;\n  public uvaggioVino: string;\n  public inBreveVino: string;\n  public urlLogoVino: string;\n}\n","export class AziendaFeed {\n  public idAzienda: string;\n  public nomeAzienda: string;\n  public cittaAzienda: string;\n  public active: boolean;\n}\n","export class AziendaVinoFeed {\n  public idAzienda: string;\n  public nomeAzienda: string;\n}\n","export class EventoFeed {\n  public idEvento: string;\n  public dataEvento: number;\n  public titoloEvento: string;\n  public temaEvento: string;\n  public urlFotoEvento: string;\n}\n","import { Vino } from '../vino/vino';\nimport { Evento } from '../evento/evento';\nimport { VinoFeed } from './vinofeed';\nimport { EventoFeed } from './eventofeed';\nimport { AziendaFeed } from './aziendafeed';\nimport { bool } from 'aws-sdk/clients/signer';\n\nexport class Feed {\n  public idFeed: string;\n  public idEntitaFeed: string;\n  public tipoFeed: number;\n  public dataFeed: number;\n  public urlImmagineFeed: string;\n  public urlVideoFeed: string;\n  public titoloFeed: string;\n  public testoLabelFeed: string;\n  public idEntitaHeaderFeed: string;\n  public dataEntitaHeaderFeed: number;\n  public tipoEntitaHeaderFeed: string;\n  public urlImmagineHeaderFeed: string;\n  public headerFeed: string;\n  public sottoHeaderFeed: string;\n  public testoFeed: string;\n  public visualizzaButtonFeed: string;\n  public puntiEsperienza: number;\n  public pubblicato: boolean;\n  public vinoFeed: Vino;\n  public vinoFeedInt: VinoFeed;\n  public eventoFeed: Evento;\n  public eventoFeedInt: EventoFeed;\n  public aziendaFeedInt: AziendaFeed;\n\n  /*\n\n\tprivate int puntiEsperienza;\n  private boolean pubblicato;\n  */\n\n}\n","import { AziendaVinoFeed } from './aziendavino';\n\nexport class VinoFeed {\n  public idVino: string;\n  public nomeVino: string;\n  public infoVino: string;\n  public urlImmagineVino: string;\n  public urlLogoVino: string;\n  public aziendaVino: AziendaVinoFeed;\n}\n","import { EventoBadge } from './eventobadge';\n\nexport class Badge {\n  public idBadge: string;\n  public nomeBadge: string;\n  public infoBadge: string;\n  public urlLogoBadge: string;\n  public tuoBadge: string;\n  public eventoBadge: EventoBadge;\n}\n","import { Azienda } from '../../../entita/azienda/azienda';\nimport { Evento } from '../../../entita/evento/evento';\nimport { Vino } from '../../../entita/vino/vino';\nimport { Badge } from '../../../entita/badge/badge';\nimport { Feed } from '../../../entita/feed/feed';\nimport { Provincia } from '../../../entita/provincia/provincia';\nimport { Token } from '../../../entita/token/token';\nimport { Utente } from '../../../entita/utente/utente';\nimport { Esito } from '../../../entita/esito/esito';\nimport { ProfiloAzienda } from '../../../entita/profiloAzienda/profiloAzienda';\n\nexport class RispostaGetGenerica {\n  public stato: string;\n  public azienda: Azienda;\n  public profiloAzienda: ProfiloAzienda;\n  public eventiAzienda: Array<Evento>;\n  public viniAzienda: Array<Vino>;\n  public aziende: Array<Azienda>;\n  public badge: Badge;\n  public numTotEventi: number;\n  public eventi: Array<Evento>;\n  public evento: Evento;\n  public numTotFeed: number;\n  public feed: Array<Feed>;\n  public province: Array<Provincia>;\n  public newToken: Token;\n  public utente: Utente;\n  public utenti: Array<Utente>;\n  public vini: Array<Vino>;\n  public badges: Array<Badge>;\n  public vino: Vino;\n  public token: Token;\n  public utentePresente: number;\n  public esito: Esito;\n}\n","import { Esito } from '../../../entita/esito/esito';\n\nexport class RispostaPutGenerica {\n  public esito: Esito;\n\n  public idAzienda: string;\n  public idBadge: string;\n  public idEvento: string;\n  public idFeed: string;\n  public imageUrl: string;\n  public idUtente: string;\n  public idVino: string;\n  public idProvincia: string;\n}\n","export class RispostaNotificaGenerica {\n\n}\n","import { Esito } from '../../../entita/esito/esito';\n\nexport class RispostaConnectGenerica {\n  public esito: Esito;\n}\n","export class Provincia {\n  public idProvincia: string;\n  public siglaProvincia: string;\n  public nomeProvincia: string;\n}\n","export class ProfiloAzienda {\n\n  public IdProfiloAzienda: string;\n  public logo: string;\n  public colorePrimario: string;\n  public coloreSecondario: string;\n  public splaqshScreen: string;\n  public paypalCode: string;\n  public idAzienda: string;\n  public nomeAzienda: string;\n}\n"]}